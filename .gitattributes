import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Crear la matriz de correlación con los valores de Spearman extraídos de la tabla proporcionada
data = {
    "Peso al nacer": [1.000, 0.786, 0.867, 0.955, 0.120],
    "Diámetro biparietal (mm)": [0.786, 1.000, 0.708, 0.771, 0.049],
    "Diámetro abdominal (mm)": [0.867, 0.708, 1.000, 0.838, 0.092],
    "Semanas de gestación": [0.955, 0.771, 0.838, 1.000, 0.108],
    "Hora del nacimiento": [0.120, 0.049, 0.092, 0.108, 1.000]
}

# Convertir a DataFrame y ajustar índices
variables = [
    "Peso al nacer",
    "Diámetro biparietal (mm)",
    "Diámetro abdominal (mm)",
    "Semanas de gestación",
    "Hora del nacimiento"
]

df_corr = pd.DataFrame(data, index=variables, columns=variables)

# Crear el heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(df_corr, annot=True, fmt=".3f", cmap="YlGnBu", square=True, cbar_kws={'label': 'ρ de Spearman'})
plt.title("Matriz de calor de correlaciones (Spearman)")
plt.xticks(rotation=45, ha='right')
plt.yticks(rotation=0)
plt.tight_layout()
plt.show()

# Matrices de confusión LDA
# Grupo de entrenamiento

import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

# Datos de la matriz de confusión para el grupo de validación
conf_matrix_val = pd.DataFrame(
    [[122, 31],
     [27, 46]],
    columns=["Predicción: No diabetes", "Predicción: Diabetes"],
    index=["Real: No diabetes", "Real: Diabetes"]
)

# Crear el mapa de calor
plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix_val, annot=True, fmt="d", cmap="Blues")
plt.title("Matriz de Confusión - Grupo de Validación")
plt.ylabel("Etiqueta Real")
plt.xlabel("Etiqueta Predicha")
plt.tight_layout()
plt.show()

# Grupo de validación

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import pandas as pd

# Datos de la matriz de confusión del grupo de validación
# Filas: reales / Columnas: predichas
conf_matrix_val = np.array([[118, 35],  # No diabetes: 118 verdaderos negativos, 35 falsos positivos
                            [23, 50]])  # Diabetes: 23 falsos negativos, 50 verdaderos positivos

# Crear el DataFrame para graficar
df_cm_val = pd.DataFrame(conf_matrix_val, index=["No diabetes (real)", "Diabetes (real)"],
                         columns=["No diabetes (predicho)", "Diabetes (predicho)"])

# Graficar la matriz de confusión como mapa de calor
plt.figure(figsize=(6, 4))
sns.heatmap(df_cm_val, annot=True, fmt='d', cmap='Blues')
plt.title("Matriz de Confusión - Grupo de Validación")
plt.ylabel("Real")
plt.xlabel("Predicho")
plt.tight_layout()
plt.show()

# Grafico de barras LDA coeficientes

import matplotlib.pyplot as plt
# Variables y coeficientes LDA estandarizados del grupo de entrenamiento
variables = [
    "Glucosa plasmática en ayunas",
    "Índice de masa corporal",
    "Insulina sérica (UI/ml)",
    "Edad",
    "Función genética de diabetes",
    "Nº de embarazos previos"
]
coeficientes = [0.791, 0.442, -0.178, 0.064, 0.233, 0.321]

# Crear gráfico de barras
plt.figure(figsize=(10, 6))
bars = plt.barh(variables, coeficientes)
plt.xlabel("Coeficiente estandarizado")
plt.title("Importancia de las variables en la función discriminante (LDA)")
plt.grid(axis="x", linestyle="--", alpha=0.7)
plt.axvline(x=0, color='black', linewidth=0.8)
plt.tight_layout()
plt.gca().invert_yaxis()
plt.show()
